{"version":3,"sources":["logo.svg","components/Header/index.js","components/Search/index.js","components/MovieCard/index.js","components/MoviesList/index.js","Movies.js","SingleMovie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","handleHomeClick","handleShowFavourites","className","onClick","style","cursor","Search","props","handleClickOutside","event","menuRef","current","contains","target","setState","showMenu","state","items","type","id","value","selected","searchTerm","React","createRef","document","addEventListener","this","removeEventListener","handleSearch","setSelectedType","handleSearchClick","onChange","prevState","ref","map","it","key","e","forEach","itemClicked","find","item","background","color","Component","withRouter","handleFavourite","Year","Title","Poster","favourite","imdbID","showFavourites","history","push","src","stopPropagation","MoviesList","movies","loading","toggleFavourite","length","movie","imdbId","Movies","favouriteMovies","filter","mov","favourites","selectedType","fetchMovies","bind","console","log","fetch","then","response","json","res","localStorage","JSON","parse","getItem","fav","catch","err","favItem","movieClicked","setItem","stringify","useState","setLoading","setMovie","useEffect","movieId","match","params","Object","keys","App","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7a6f30ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./header.css\";\n\nfunction Header({ handleHomeClick, handleShowFavourites, ...props }) {\n  return (\n    <div className=\"header\">\n      <div\n        onClick={() => {\n          handleHomeClick();\n        }}\n        style={{ cursor: \"pointer\" }}\n      >\n        Home\n      </div>\n      <div\n        onClick={() => {\n          handleShowFavourites();\n        }}\n        style={{ cursor: \"pointer\" }}\n      >\n        Favourites\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./search.css\";\n\nexport default class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          type: \"All\",\n          id: 1,\n          value: \"\",\n          selected: true\n        },\n        {\n          type: \"Movies\",\n          id: 2,\n          value: \"movie\",\n          selected: false\n        },\n        {\n          type: \"Series\",\n          id: 3,\n          value: \"series\",\n          selected: false\n        },\n        {\n          type: \"Episodes\",\n          id: 4,\n          value: \"episode\",\n          selected: false\n        }\n      ],\n      searchTerm: \"Lord\",\n      showMenu: false\n    };\n    this.menuRef = React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  handleClickOutside = event => {\n    if (\n      this.menuRef &&\n      this.menuRef.current &&\n      !this.menuRef.current.contains(event.target)\n    ) {\n      this.setState({\n        showMenu: false\n      });\n    }\n  };\n\n  render() {\n    let { items, showMenu } = this.state;\n    let {\n      handleSearch,\n      searchTerm,\n      setSelectedType,\n      handleSearchClick\n    } = this.props;\n    return (\n      <div className=\"search-container\">\n        <div className=\"search-input-container\">\n          <input\n            type=\"text\"\n            value={searchTerm}\n            className=\"search-input\"\n            onChange={handleSearch}\n          />\n          <div\n            className=\"search-dropdown\"\n            onClick={() => {\n              this.setState(prevState => {\n                return {\n                  showMenu: !prevState.showMenu\n                };\n              });\n            }}\n          >\n            dropdown\n          </div>\n          {showMenu ? (\n            <div className=\"search-dropdown-menu\" ref={this.menuRef}>\n              {items.map(it => {\n                return (\n                  <div\n                    className={\"search-dropdown-item\"}\n                    key={it.id}\n                    onClick={e => {\n                      let items = [...this.state.items];\n                      items.forEach(it => (it.selected = false));\n                      let itemClicked = items.find(item => it.id === item.id);\n                      itemClicked.selected = !itemClicked.selected;\n                      setSelectedType(it);\n                      this.setState({\n                        showMenu: false,\n                        items\n                      });\n                    }}\n                    style={\n                      it.selected\n                        ? { background: \"#009ae0\", color: \"white\" }\n                        : {}\n                    }\n                  >\n                    {it.type}\n                  </div>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n        <div\n          className=\"search-button\"\n          onClick={() => {\n            handleSearchClick();\n          }}\n        >\n          Search\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./card.css\";\nimport { withRouter } from \"react-router-dom\";\nfunction MovieCard({\n  handleFavourite,\n  Year,\n  Title,\n  Poster,\n  favourite,\n  imdbID,\n  showFavourites,\n  ...props\n}) {\n  return (\n    <div\n      className=\"movie-card-container\"\n      onClick={() => {\n        props.history.push(`/movie/${imdbID}`);\n      }}\n    >\n      <div className=\"movie-card\">\n        <div className=\"movie-card-img\">\n          <img\n            className=\"card-img\"\n            src={\n              Poster === \"N/A\"\n                ? \"https://www.moooicarpets.com/wp-content/ewww/lazy/placeholder-300x450.png\"\n                : Poster\n            }\n          />\n        </div>\n        <div className=\"movie-card-title\">{Title}</div>\n        <div className=\"movie-card-date\">\n          <div>{Year}</div>\n          {!showFavourites ? (\n            <div\n              style={\n                favourite\n                  ? { cursor: \"pointer\", color: \"red\" }\n                  : { cursor: \"pointer\", color: \"blue\" }\n              }\n              onClick={e => {\n                e.stopPropagation();\n                handleFavourite();\n              }}\n            >\n              {favourite ? \"Unfavourite\" : \"favourite\"}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(MovieCard);\n","import React from \"react\";\nimport MovieCard from \"../MovieCard\";\nimport \"./list.css\";\n\nexport default class MoviesList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let { movies, loading, toggleFavourite, showFavourites } = this.props;\n    return (\n      <div\n        className={\n          loading || (!loading && !movies.length)\n            ? \"movies-list-container\"\n            : \"movies-list-container-grid\"\n        }\n      >\n        {loading ? (\n          <div className=\"movies-list-loading\">Loading.....</div>\n        ) : movies.length ? (\n          movies.map(movie => {\n            return (\n              <MovieCard\n                handleFavourite={() => {\n                  toggleFavourite(movie);\n                }}\n                {...movie}\n                showFavourites={showFavourites}\n                key={movie.imdbId}\n              />\n            );\n          })\n        ) : (\n          <div className=\"movies-list-loading\">No movies found</div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport MoviesList from \"./components/MoviesList\";\nimport { Router, Switch } from \"react-router-dom\";\n\nexport default class Movies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      searchTerm: \"Lord\",\n      selectedType: {\n        type: \"All\",\n        id: 1,\n        value: \"\",\n        loading: false,\n        favourites: [],\n        showFavourites: false\n      }\n    };\n    this.fetchMovies = this.fetchMovies.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  fetchMovies() {\n    let { searchTerm, selectedType } = this.state;\n    console.log(\"apicall selectedType:\", selectedType);\n    this.setState({\n      loading: true\n    });\n    fetch(\n      `http://www.omdbapi.com/?s=${searchTerm}&type=${selectedType.value}&apikey=1b9a1a44&plot=full`\n    )\n      .then(response => response.json())\n      .then(res => {\n        let movies = [...res.Search];\n        movies.forEach(mov => {\n          mov.favourite = false;\n        });\n\n        // check if any favourite movies in localStorage and mark them favourite.\n        if (\"favourites\" in localStorage) {\n          let favourites = JSON.parse(localStorage.getItem(\"favourites\"));\n          favourites.forEach(fav => {\n            movies.forEach(mov => {\n              if (mov.imdbID === fav.imdbID) {\n                mov.favourite = fav.favourite;\n              }\n            });\n          });\n        }\n\n        this.setState({\n          movies,\n          loading: false\n        });\n      })\n      .catch(err => {\n        console.log(\"err:\", err);\n        this.setState({\n          loading: false\n        });\n      });\n  }\n\n  handleSearch = e => {\n    this.setState({\n      searchTerm: e.target.value\n    });\n  };\n\n  setSelectedType(type) {\n    this.setState(prevState => {\n      return {\n        selectedType: { ...type }\n      };\n    });\n  }\n\n  handleSearchClick() {\n    this.setState(\n      {\n        movies: []\n      },\n      () => {\n        this.fetchMovies();\n      }\n    );\n  }\n\n  toggleFavourite(favItem) {\n    let movies = [...this.state.movies];\n    let movieClicked = movies.find(mov => {\n      return mov.imdbID === favItem.imdbID;\n    });\n    movieClicked.favourite = !movieClicked.favourite;\n\n    //set favourites to localstorage:\n    let favouriteMovies = movies.filter(mov => {\n      return mov.favourite === true;\n    });\n\n    localStorage.setItem(\"favourites\", JSON.stringify(favouriteMovies));\n\n    this.setState({\n      movies\n    });\n  }\n\n  handleShowFavourites = () => {\n    let movies = [...this.state.movies];\n    let favouriteMovies = movies.filter(mov => {\n      return mov.favourite === true;\n    });\n    this.setState({\n      showFavourites: true,\n      favourites: favouriteMovies\n    });\n  };\n\n  handleHomeClick() {\n    this.setState({\n      showFavourites: false\n    });\n  }\n\n  render() {\n    let {\n      movies,\n      searchTerm,\n      loading,\n      favourites,\n      showFavourites\n    } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"content\">\n          <Header\n            handleHomeClick={this.handleHomeClick.bind(this)}\n            handleShowFavourites={this.handleShowFavourites}\n          />\n          {!showFavourites ? (\n            <Search\n              setSelectedType={this.setSelectedType.bind(this)}\n              handleSearchClick={this.handleSearchClick.bind(this)}\n              searchTerm={searchTerm}\n              handleSearch={this.handleSearch}\n            />\n          ) : null}\n\n          <MoviesList\n            toggleFavourite={this.toggleFavourite.bind(this)}\n            loading={loading}\n            movies={showFavourites ? favourites : movies}\n            showFavourites={showFavourites}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction SingleMovie({ ...props }) {\n  let [loading, setLoading] = useState(false);\n\n  let [movie, setMovie] = useState({});\n  useEffect(() => {\n    //call the API here:\n\n    let movieId = props.match.params.id;\n    setLoading(true);\n    fetch(`http://www.omdbapi.com/?i=${movieId}&apikey=1b9a1a44&plot=full`)\n      .then(response => response.json())\n      .then(res => {\n        setMovie(res);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.log(\"Error:\", err);\n      });\n  }, []);\n  return (\n    <div className=\"single-movie-container\">\n      {loading ? (\n        \"Loading....\"\n      ) : Object.keys(movie).length ? (\n        <div className=\"content\">\n          <div className=\"img-container\">\n            <img src={movie.Poster} />\n          </div>\n          <div className=\"movie-details\">\n            <div className=\"movie-title\">{movie.Title}</div>\n            <div className=\"movie-year\">{movie.Year}</div>\n          </div>\n          <div\n            className=\"go-back-button\"\n            onClick={() => {\n              props.history.push(\"/\");\n            }}\n          >\n            <button>Go back</button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"content\">No such movie found</div>\n      )}\n    </div>\n  );\n}\n\nexport default withRouter(SingleMovie);\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Movies from \"./Movies\";\nimport SingleMovie from \"./SingleMovie\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Movies />\n          </Route>\n          <Route exact path=\"/movie/:id\">\n            <SingleMovie />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}